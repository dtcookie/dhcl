{
    "Schema": {
        "active": {
            "Type": "schema.TypeBool",
            "Required": true,
            "Description": "The configuration is enabled (`true`) or disabled (`false`)"
        },
        "headers": {
            "Type": "schema.TypeList",
            "Optional": true,
            "Description": "A list of the additional HTTP headers",
            "Elem": {
                "Schema": {
                    "header": {
                        "Type": "schema.TypeSet",
                        "Required": true,
                        "Description": "A list of the additional HTTP headers",
                        "Elem": {
                            "Schema": {
                                "name": {
                                    "Type": "schema.TypeString",
                                    "Required": true,
                                    "Description": "The name of the HTTP header"
                                },
                                "secret_value": {
                                    "Type": "schema.TypeString",
                                    "Optional": true,
                                    "Description": "The value of the HTTP header as a sensitive property. May contain an empty value. `secret_value` and `value` are mutually exclusive. Only one of those two is allowed to be specified.",
                                    "Sensitive": true
                                },
                                "value": {
                                    "Type": "schema.TypeString",
                                    "Optional": true,
                                    "Description": "The value of the HTTP header. May contain an empty value. `secret_value` and `value` are mutually exclusive. Only one of those two is allowed to be specified."
                                }
                            }
                        },
                        "MinItems": 1
                    }
                }
            },
            "MaxItems": 1,
            "MinItems": 1
        },
        "insecure": {
            "Type": "schema.TypeBool",
            "Optional": true,
            "Description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates"
        },
        "name": {
            "Type": "schema.TypeString",
            "Required": true,
            "Description": "The name of the notification configuration"
        },
        "payload": {
            "Type": "schema.TypeString",
            "Required": true,
            "Description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas"
        },
        "profile": {
            "Type": "schema.TypeString",
            "Required": true,
            "Description": "The ID of the associated alerting profile"
        },
        "url": {
            "Type": "schema.TypeString",
            "Required": true,
            "Description": "The URL of the WebHook endpoint"
        }
    }
}